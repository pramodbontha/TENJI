version: "3.8"

services:
  neo4j:
    image: neo4j:latest
    container_name: neo4j
    restart: always
    ports:
      - "7474:7474" # HTTP access
      - "7687:7687" # Bolt protocol access
    environment:
      - NEO4J_AUTH=${NEO4J_AUTH} # Set the default password for the Neo4j database
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "cypher-shell -u $NEO4J_USER -p $NEO4J_PASSWORD 'RETURN 1'",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - tenji

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - tenji

  api:
    container_name: api
    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile.prod
    ports:
      - "3000:3000"
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - NEO4J_URL=${NEO4J_URL}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - PORT=${PORT}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
      - CLIENT_URL=${CLIENT_URL}
    volumes:
      - ./api:/app
      - /app/node_modules
    command: node dist/main.js
    networks:
      - tenji

  lemmatizer:
    build:
      context: ./lemmatizer-app # Path to the lemmatizer Dockerfile
    container_name: lemmatizer
    ports:
      - "5000:5000" # Exposing port 5000
    depends_on:
      neo4j:
        condition: service_healthy
    restart: always
    networks:
      - tenji

  client:
    container_name: client
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    depends_on:
      - api
    networks:
      - tenji

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - client
    networks:
      - tenji

networks:
  tenji:

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  esdata:
